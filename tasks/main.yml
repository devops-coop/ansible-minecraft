---
- name: check for supported OS
  assert:
    that:
      - "ansible_os_family in supported_ansible_os_families"

- name: include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: include Debian-specific tasks
  include: Debian.yml
  when: ansible_os_family == 'Debian'

- name: include Red Hat-specific tasks
  include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: create Minecraft group
  group:
    state=present
    name={{ minecraft_group }}
    system=yes

- name: create Minecraft user
  user:
    state=present
    name={{ minecraft_user }}
    group={{ minecraft_group }}
    home={{ minecraft_home }}

- include: supervisor.yml
  when: minecraft_process_control == 'supervisor'

- include: systemd.yml
  when: minecraft_process_control == 'systemd'

- include: latest.yml
  when: minecraft_version == 'latest'

- name: download Minecraft server
  get_url:
    url={{ minecraft_url }}/{{ minecraft_version_latest | default(minecraft_version) }}/minecraft_server.{{ minecraft_version_latest | default(minecraft_version) }}.jar
    dest={{ minecraft_home }}/minecraft_server.{{ minecraft_version_latest | default(minecraft_version) }}.jar
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
    mode=0755

- name: symlink Minecraft server
  file:
    src={{ minecraft_home }}/minecraft_server.{{ minecraft_version_latest | default(minecraft_version) }}.jar
    path={{ minecraft_home }}/minecraft_server.jar
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
    state=link
  notify:
    - restart Minecraft

- name: agree to EULA
  copy:
    src=eula.txt
    dest={{ minecraft_home }}/eula.txt
    mode=0644
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
  notify:
    - enable service

- name: update whitelist
  minecraft_server_file:
    server_file: whitelist
    values: "{{ minecraft_whitelist }}"
    path: "{{ minecraft_home }}/whitelist.json"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
  notify:
    - restart Minecraft
  when: minecraft_whitelist | length > 0

- name: update ops
  minecraft_server_file:
    server_file: ops
    values: "{{ minecraft_ops }}"
    path: "{{ minecraft_home }}/ops.json"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
  notify:
    - restart Minecraft
  when: minecraft_ops | length > 0

- name: update banned-players
  minecraft_server_file:
    server_file: banned-players
    values: "{{ minecraft_banned_players }}"
    path: "{{ minecraft_home }}/banned-players.json"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
  notify:
    - restart Minecraft
  when: minecraft_banned_players | length > 0

- name: update banned-ips
  minecraft_server_file:
    server_file: banned-ips
    values: "{{ minecraft_banned_ips }}"
    path: "{{ minecraft_home }}/banned-ips.json"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
  notify:
    - restart Minecraft
  when: minecraft_banned_ips | length > 0
